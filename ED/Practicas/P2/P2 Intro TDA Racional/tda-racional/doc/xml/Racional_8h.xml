<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Racional_8h" kind="file" language="C++">
    <compoundname>Racional.h</compoundname>
    <includes local="no">iostream</includes>
    <includedby refid="Racional_8cpp" local="yes">Racional.cpp</includedby>
    <includedby refid="usoRacional_8cpp" local="no">usoRacional.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>Racional.h</label>
        <link refid="Racional_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>Racional.cpp</label>
        <link refid="Racional_8cpp"/>
      </node>
      <node id="1">
        <label>Racional.h</label>
        <link refid="Racional_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>usoRacional.cpp</label>
        <link refid="usoRacional_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classRacional" prot="public">Racional</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="Racional_8h_1a76a5d944b02dad8f177df16270f2bc0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getMaxComDiv</definition>
        <argsstring>(int primero, int segundo)</argsstring>
        <name>getMaxComDiv</name>
        <param>
          <type>int</type>
          <declname>primero</declname>
        </param>
        <param>
          <type>int</type>
          <declname>segundo</declname>
        </param>
        <briefdescription>
<para>función que calcula el máximo comun divisor de dos números basado en el algo. de Euclides </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>primero</parametername>
</parameternamelist>
<parameterdescription>
<para>el primero de la pareja de números sobre la que se calcula </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>segundo</parametername>
</parameternamelist>
<parameterdescription>
<para>el segundo de la pareja de números sobre la que se calcula </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>el MCD de ambos números </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Racional.h" line="204" column="5" bodyfile="Racional.cpp" bodystart="123" bodyend="129" declfile="Racional.h" declline="204" declcolumn="5"/>
        <references refid="Racional_8cpp_1a76a5d944b02dad8f177df16270f2bc0d" compoundref="Racional_8cpp" startline="123" endline="129">getMaxComDiv</references>
        <referencedby refid="Racional_8h_1a76a5d944b02dad8f177df16270f2bc0d" compoundref="Racional_8cpp" startline="123" endline="129">getMaxComDiv</referencedby>
        <referencedby refid="classRacional_1ae5771dfb260f4bb9e45aa809cab145b4" compoundref="Racional_8cpp" startline="133" endline="139">Racional::reducir</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Fichero cabecera del TDA <ref refid="classRacional" kindref="compound">Racional</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>[Modificado por Salva Romero, proporcionado por profesor] <anchor id="Racional_8h_1Cabeceras"/></para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#ifndef<sp/>__RACIONAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__RACIONAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classRacional" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRacional" kindref="compound">Racional</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>den;<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classRacional" kindref="compound">Racional</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classRacional" kindref="compound">Racional</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d);<sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Racional(int<sp/>n=0,<sp/>int<sp/>d=1):<sp/>num(n),den(d)<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classRacional" kindref="compound">Racional</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRacional" kindref="compound">Racional</ref>&amp;<sp/>c);<sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numerador<sp/>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denominador();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>asignar(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>comparar(<ref refid="classRacional" kindref="compound">Racional</ref><sp/>r);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>print();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classRacional" kindref="compound">Racional</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRacional" kindref="compound">Racional</ref><sp/>&amp;<sp/>r);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="classRacional" kindref="compound">Racional</ref><sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRacional" kindref="compound">Racional</ref><sp/>&amp;<sp/>r);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRacional" kindref="compound">Racional</ref><sp/>&amp;r);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator<sp/>==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRacional" kindref="compound">Racional</ref><sp/>&amp;r);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>ostream&amp;<sp/><ref refid="Racional_8cpp_1a4335a71aa6c96ff2f0cb5aee0f3961a1" kindref="member">operator&lt;&lt; </ref>(ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRacional" kindref="compound">Racional</ref>&amp;<sp/>r);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>istream&amp;<sp/><ref refid="Racional_8cpp_1a32a42bfb8bd87c71444f292d8f8d09be" kindref="member">operator&gt;&gt; </ref>(istream&amp;<sp/>is,<sp/><ref refid="classRacional" kindref="compound">Racional</ref>&amp;<sp/>r);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classRacional" kindref="compound">Racional</ref><sp/><sp/>simplifica();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="comment">/*************<sp/>INCLUIR<sp/>OTRAS<sp/>FUNCIONES<sp/>y<sp/>OPERADORES<sp/>*********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Por<sp/>ejemplo:</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>la<sp/>funcion<sp/>irreducible<sp/>que<sp/>nos<sp/>convierta<sp/>un<sp/>racional<sp/>r</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>en<sp/>irreducible,<sp/>ej.<sp/>12/4<sp/>-&gt;<sp/>3/1</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>la<sp/>funcion<sp/>real<sp/>que<sp/>devuelva<sp/>el<sp/>valor<sp/>real<sp/>asociado<sp/>al<sp/>racional</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>ej,<sp/>1/2<sp/>-&gt;<sp/>0.5</highlight></codeline>
<codeline lineno="173"><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>Operador<sp/>de<sp/>resta,<sp/>multiplicacion,<sp/>division,etc.<sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment"><sp/>/*************<sp/><sp/><sp/>MÉTODOS<sp/>NUEVOS<sp/>****************\*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reducir();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getReal();</highlight></codeline>
<codeline lineno="194"><highlight class="normal">};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/********<sp/><sp/><sp/>FUNCIONES<sp/>AUXILIARES<sp/>**********\*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="Racional_8h_1a76a5d944b02dad8f177df16270f2bc0d" kindref="member">getMaxComDiv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primero,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segundo);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Racional.h"/>
  </compounddef>
</doxygen>
